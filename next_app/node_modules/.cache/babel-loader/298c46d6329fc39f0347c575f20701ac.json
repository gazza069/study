{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Your web app's Firebase configuration\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDnxOGx_4EyROacLvmPRZcYlU86LQ_LF2A\",\n  authDomain: \"react-next-a7834.firebaseapp.com\",\n  databaseURL: \"https://react-next-a7834.firebaseio.com\",\n  projectId: \"react-next-a7834\",\n  storageBucket: \"\",\n  messagingSenderId: \"951860818475\",\n  appId: \"1:951860818475:web:16a0dfbddf8c98e4\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {}; // レデューサー（ダミー）\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:\\Users\\s.takasaki\\study\\next_app\\store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireapp","initializeApp","config","error","console","log","message","initial","fireReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,WAAW,EAAE,yCAHQ;AAIrBC,EAAAA,SAAS,EAAE,kBAJU;AAKrBC,EAAAA,aAAa,EAAE,EALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAArB;AAUA,IAAIC,OAAJ;;AACA,IAAI;AACAT,EAAAA,QAAQ,CAACU,aAAT,CAAuBC,MAAvB;AACH,CAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AACD,eAAeN,OAAf,C,CAEA;;AACA,IAAMO,OAAO,GAAG,EAAhB,C,CAGA;;AACA,SAASC,WAAT,GAA8C;AAAA,MAAzBC,KAAyB,uEAAjBF,OAAiB;AAAA,MAARG,MAAQ;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,YAAL;AACI,aAAOF,KAAP;AACJ;;AACA;AACI,aAAOA,KAAP;AANR;AAQH,C,CAED;;;AACA,OAAO,SAASG,SAAT,GAAoC;AAAA,MAAjBH,KAAiB,uEAATF,OAAS;AACvC,SAAOnB,WAAW,CAACoB,WAAD,EAAcC,KAAd,EAAqBpB,eAAe,CAACC,eAAD,CAApC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\napiKey: \"AIzaSyDnxOGx_4EyROacLvmPRZcYlU86LQ_LF2A\",\r\nauthDomain: \"react-next-a7834.firebaseapp.com\",\r\ndatabaseURL: \"https://react-next-a7834.firebaseio.com\",\r\nprojectId: \"react-next-a7834\",\r\nstorageBucket: \"\",\r\nmessagingSenderId: \"951860818475\",\r\nappId: \"1:951860818475:web:16a0dfbddf8c98e4\"\r\n};\r\n\r\nvar fireapp;\r\ntry {\r\n    firebase.initializeApp(config);\r\n} catch (error) {\r\n    console.log(error.message);\r\n}\r\nexport default fireapp;\r\n\r\n// ステート初期値\r\nconst initial = {\r\n}\r\n\r\n// レデューサー（ダミー）\r\nfunction fireReducer(state = initial, action) {\r\n    switch (action.type) {\r\n        // ダミー\r\n        case 'TESTACTION':\r\n            return state;\r\n        // デフォルト\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// initStore関数\r\nexport function initStore(state = initial) {\r\n    return createStore(fireReducer, state, applyMiddleware(thunkMiddleware))\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}