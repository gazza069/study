{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期値\n\nvar initial = {\n  message: 'START',\n  count: 0 // レデューサー\n\n};\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        messege: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数(redux-jsで必要)\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:\\Users\\s.takasaki\\study\\next_app\\store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","messege","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,KAAK,EAAE,CAFK,CAKhB;;AALgB,CAAhB;;AAMA,SAASC,cAAT,GAAkD;AAAA,MAAzBC,KAAyB,uEAAjBJ,OAAiB;AAAA,MAARK,MAAQ;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHK,QAAAA,OAAO,EAAE,OADN;AAEHL,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFZ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASI,SAAT,GAAoC;AAAA,MAAjBJ,KAAiB,uEAATJ,OAAS;AACvC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// ステート初期値\r\nconst initial = {\r\n    message:'START',\r\n    count: 0\r\n}\r\n\r\n// レデューサー\r\nfunction counterReducer (state = initial, action) {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return {\r\n                message: 'INCREMENT',\r\n                count: state.count + 1\r\n            };\r\n        case 'DECREMENT':\r\n            return {\r\n                message: 'DECREMENT',\r\n                count: state.count - 1\r\n            };\r\n        case 'RESET':\r\n            return {\r\n                messege: 'RESET',\r\n                count: initial.count\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// initStore関数(redux-jsで必要)\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}"]},"metadata":{},"sourceType":"module"}